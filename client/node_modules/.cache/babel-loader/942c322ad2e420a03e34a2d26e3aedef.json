{"ast":null,"code":"var _jsxFileName = \"C:\\\\kelsie-portfolio\\\\src\\\\Components\\\\Contact\\\\contact.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './contact.css';\n\nconst Contact = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [toastClass, setToastClass] = useState(\"\");\n  const [emailClass, setEmailClass] = useState([\"form-control mb-2\"]);\n  const [nameClass, setNameClass] = useState([\"form-control mb-2\"]);\n  const [messageClass, setMessageClass] = useState([\"form-control mb-2\"]);\n\n  const formChangeHandler = (e, maxMinLength) => {\n    if (isValid) {\n      setError(\"\");\n    }\n\n    if (e.target.name === 'Name') {\n      setName(e.target.value);\n    }\n\n    if (e.target.name === \"Email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name === \"Message\") {\n      setMessage(e.target.value);\n    } //check validity returns true or false\n    //update the isValid state\n\n\n    setIsValid(checkValidity(e.target.name, e.target.value, maxMinLength));\n  };\n\n  const handleContactMe = e => {\n    e.preventDefault();\n\n    if (isValid) {\n      setError(''); //send data\n\n      axios.post('api/contact-me', {\n        name,\n        email,\n        message\n      }).then(data => {\n        //display the css animation\n        setToastClass(\"success\"); //reload window\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      });\n    } else {\n      setError('***Some fields are missing or invalid***');\n    }\n  };\n\n  const checkValidity = (name, value, maxMinLength) => {\n    let isValid = false;\n\n    const emailValid = email => {\n      const emailRegex = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n      return emailRegex.test(email);\n    };\n\n    const classDecider = validity => {\n      if (!validity) {\n        let inputClass = ['form-control', 'mb-2', 'border-2', 'border-danger'];\n        return inputClass;\n      }\n\n      if (validity) {\n        let inputClass = ['form-control', 'mb-2'];\n        return inputClass;\n      }\n    };\n\n    if (name === 'Email') {\n      isValid = value.trim() !== '' && emailValid(value);\n      let newEmailClass = classDecider(isValid);\n      setEmailClass(newEmailClass);\n    }\n\n    if (name === 'Name') {\n      isValid = value.trim() !== '';\n      let newNameClass = classDecider(isValid);\n      setNameClass(newNameClass);\n    }\n\n    if (name === 'Message') {\n      isValid = value.trim() !== '';\n      let newMessageClass = classDecider(isValid);\n      setMessageClass(newMessageClass);\n    }\n\n    if (!maxMinLength) {\n      isValid = value.trim() !== '';\n    }\n\n    return isValid;\n  };\n\n  return React.createElement(\"main\", {\n    className: \"container my-3 bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-info h3 py-3 mb-3 border-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Contact\"), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"LinkedIn: \", React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://www.linkedin.com/in/kelsie-langston-50433741/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"linkedin.com/in/kelsie-langston-50433741/\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"GitHub: \", React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/klangs34\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"github.com/klangs34\")))), React.createElement(\"section\", {\n    className: \"contact_us\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleContactMe,\n    className: \"text-Muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-center text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: formChangeHandler,\n    type: \"text\",\n    className: nameClass.join(' '),\n    name: \"Name\",\n    id: \"name\",\n    \"aria-describedby\": \"nameHelp\",\n    placeholder: \"Enter name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    onChange: formChangeHandler,\n    type: \"email\",\n    className: emailClass.join(' '),\n    name: \"Email\",\n    id: \"exampleInputEmail1\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Enter email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Message\"), React.createElement(\"textarea\", {\n    onChange: formChangeHandler,\n    className: messageClass.join(' '),\n    name: \"Message\",\n    id: \"message\",\n    placeholder: \"Type Message Here\",\n    rows: \"10\",\n    cols: \"50\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Send \", React.createElement(\"img\", {\n    src: \"https://img.icons8.com/android/24/000000/forward-arrow.png\",\n    alt: \"forward arrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: toastClass && toastClass,\n    id: \"toast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Message Sent Successfully\")));\n};\n\nexport default Contact;","map":{"version":3,"sources":["C:/kelsie-portfolio/src/Components/Contact/contact.js"],"names":["React","useState","axios","Contact","name","setName","email","setEmail","message","setMessage","isValid","setIsValid","error","setError","toastClass","setToastClass","emailClass","setEmailClass","nameClass","setNameClass","messageClass","setMessageClass","formChangeHandler","e","maxMinLength","target","value","checkValidity","handleContactMe","preventDefault","post","then","data","setTimeout","window","location","reload","emailValid","emailRegex","test","classDecider","validity","inputClass","trim","newEmailClass","newNameClass","newMessageClass","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEK,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEO,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAEW,KAAF,EAASC,QAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAAEe,UAAF,EAAcC,aAAd,IAAgChB,QAAQ,CAAC,CAAC,mBAAD,CAAD,CAA9C;AACA,QAAM,CAAEiB,SAAF,EAAaC,YAAb,IAA8BlB,QAAQ,CAAC,CAAC,mBAAD,CAAD,CAA5C;AACA,QAAM,CAAEmB,YAAF,EAAgBC,eAAhB,IAAoCpB,QAAQ,CAAC,CAAC,mBAAD,CAAD,CAAlD;;AAEA,QAAMqB,iBAAiB,GAAG,CAACC,CAAD,EAAIC,YAAJ,KAAqB;AAE3C,QAAGd,OAAH,EAAY;AACRG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AACD,QAAIU,CAAC,CAACE,MAAF,CAASrB,IAAT,KAAkB,MAAtB,EAA8B;AAC1BC,MAAAA,OAAO,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACH;;AACD,QAAIH,CAAC,CAACE,MAAF,CAASrB,IAAT,KAAkB,OAAtB,EAA+B;AAC3BG,MAAAA,QAAQ,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACH;;AACD,QAAIH,CAAC,CAACE,MAAF,CAASrB,IAAT,KAAkB,SAAtB,EAAiC;AAC7BK,MAAAA,UAAU,CAACc,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AACH,KAb0C,CAc3C;AACA;;;AACAf,IAAAA,UAAU,CAACgB,aAAa,CAACJ,CAAC,CAACE,MAAF,CAASrB,IAAV,EAAgBmB,CAAC,CAACE,MAAF,CAASC,KAAzB,EAAgCF,YAAhC,CAAd,CAAV;AACH,GAjBD;;AAmBA,QAAMI,eAAe,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACM,cAAF;;AAEA,QAAInB,OAAJ,EAAa;AACTG,MAAAA,QAAQ,CAAC,EAAD,CAAR,CADS,CAET;;AACAX,MAAAA,KAAK,CAAC4B,IAAN,CAAW,gBAAX,EAA6B;AAAC1B,QAAAA,IAAD;AAAOE,QAAAA,KAAP;AAAcE,QAAAA;AAAd,OAA7B,EACCuB,IADD,CACMC,IAAI,IAAI;AACV;AACAjB,QAAAA,aAAa,CAAC,SAAD,CAAb,CAFU,CAGV;;AACAkB,QAAAA,UAAU,CAAC,MAAK;AACZC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OARD;AASH,KAZD,MAYO;AACHvB,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACH;AACJ,GAlBD;;AAoBA,QAAMc,aAAa,GAAG,CAACvB,IAAD,EAAOsB,KAAP,EAAcF,YAAd,KAA+B;AAEjD,QAAId,OAAO,GAAG,KAAd;;AAEA,UAAM2B,UAAU,GAAI/B,KAAD,IAAW;AAC1B,YAAMgC,UAAU,GAAG,0DAAnB;AACA,aAAOA,UAAU,CAACC,IAAX,CAAgBjC,KAAhB,CAAP;AACH,KAHD;;AAKA,UAAMkC,YAAY,GAAIC,QAAD,IAAc;AAC/B,UAAI,CAACA,QAAL,EAAe;AACX,YAAIC,UAAU,GAAG,CAAC,cAAD,EAAiB,MAAjB,EAAyB,UAAzB,EAAqC,eAArC,CAAjB;AACA,eAAOA,UAAP;AACH;;AACD,UAAID,QAAJ,EAAc;AACV,YAAIC,UAAU,GAAG,CAAC,cAAD,EAAiB,MAAjB,CAAjB;AACA,eAAOA,UAAP;AACH;AACJ,KATD;;AAWA,QAAGtC,IAAI,KAAK,OAAZ,EAAoB;AAChBM,MAAAA,OAAO,GAAGgB,KAAK,CAACiB,IAAN,OAAiB,EAAjB,IAAuBN,UAAU,CAACX,KAAD,CAA3C;AACA,UAAIkB,aAAa,GAAGJ,YAAY,CAAC9B,OAAD,CAAhC;AACAO,MAAAA,aAAa,CAAC2B,aAAD,CAAb;AACH;;AAED,QAAGxC,IAAI,KAAK,MAAZ,EAAmB;AACfM,MAAAA,OAAO,GAAGgB,KAAK,CAACiB,IAAN,OAAiB,EAA3B;AACA,UAAIE,YAAY,GAAGL,YAAY,CAAC9B,OAAD,CAA/B;AACAS,MAAAA,YAAY,CAAC0B,YAAD,CAAZ;AACH;;AAED,QAAGzC,IAAI,KAAK,SAAZ,EAAsB;AAClBM,MAAAA,OAAO,GAAGgB,KAAK,CAACiB,IAAN,OAAiB,EAA3B;AACA,UAAIG,eAAe,GAAGN,YAAY,CAAC9B,OAAD,CAAlC;AACAW,MAAAA,eAAe,CAACyB,eAAD,CAAf;AACH;;AAED,QAAI,CAACtB,YAAL,EAAmB;AAEfd,MAAAA,OAAO,GAAGgB,KAAK,CAACiB,IAAN,OAAiB,EAA3B;AACH;;AAED,WAAOjC,OAAP;AACH,GA5CD;;AA8CA,SACI;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAG,IAAA,IAAI,EAAC,uDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA9B,CAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAG,IAAA,IAAI,EAAC,6BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA9B,CAAX,CAFJ,CAFJ,EAMI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEkB,eAAhB;AAAiC,IAAA,SAAS,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0ChB,KAA1C,CADA,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,IAAA,QAAQ,EAAEU,iBAAjB;AAAoC,IAAA,IAAI,EAAC,MAAzC;AAAgD,IAAA,SAAS,EAAEJ,SAAS,CAAC6B,IAAV,CAAe,GAAf,CAA3D;AAAgF,IAAA,IAAI,EAAC,MAArF;AAA4F,IAAA,EAAE,EAAC,MAA/F;AAAsG,wBAAiB,UAAvH;AACI,IAAA,WAAW,EAAC,YADhB;AAC6B,IAAA,QAAQ,MADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,EAKI;AAAO,IAAA,QAAQ,EAAEzB,iBAAjB;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAiD,IAAA,SAAS,EAAEN,UAAU,CAAC+B,IAAX,CAAgB,GAAhB,CAA5D;AAAkF,IAAA,IAAI,EAAC,OAAvF;AAA+F,IAAA,EAAE,EAAC,oBAAlG;AAAuH,wBAAiB,WAAxI;AACI,IAAA,WAAW,EAAC,aADhB;AAC8B,IAAA,QAAQ,MADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAFJ,EAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAU,IAAA,QAAQ,EAAEzB,iBAApB;AAAuC,IAAA,SAAS,EAAEF,YAAY,CAAC2B,IAAb,CAAkB,GAAlB,CAAlD;AAA0E,IAAA,IAAI,EAAC,SAA/E;AAAyF,IAAA,EAAE,EAAC,SAA5F;AAAsG,IAAA,WAAW,EAAC,mBAAlH;AAAsI,IAAA,IAAI,EAAC,IAA3I;AACI,IAAA,IAAI,EAAC,IADT;AACc,IAAA,QAAQ,MADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,EAeI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyD;AAAK,IAAA,GAAG,EAAC,4DAAT;AAAsE,IAAA,GAAG,EAAC,eAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzD,CAfJ,CADJ,EAkBA;AAAK,IAAA,SAAS,EAAEjC,UAAU,IAAIA,UAA9B;AAA0C,IAAA,EAAE,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAlBA,CANJ,CADJ;AA+BH,CAlID;;AAoIA,eAAeX,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './contact.css';\r\n\r\nconst Contact = () => {\r\n\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ message, setMessage ] = useState(\"\");\r\n    const [ isValid, setIsValid ] = useState(false);\r\n    const [ error, setError ] = useState(\"\");\r\n\r\n    const [toastClass, setToastClass] = useState(\"\");\r\n\r\n    const [ emailClass, setEmailClass ] = useState([\"form-control mb-2\"]);\r\n    const [ nameClass, setNameClass ] = useState([\"form-control mb-2\"]);\r\n    const [ messageClass, setMessageClass ] = useState([\"form-control mb-2\"]);\r\n\r\n    const formChangeHandler = (e, maxMinLength) => {\r\n\r\n        if(isValid) {\r\n            setError(\"\");\r\n        }\r\n        if (e.target.name === 'Name') {\r\n            setName(e.target.value)\r\n        }\r\n        if (e.target.name === \"Email\") {\r\n            setEmail(e.target.value);\r\n        }\r\n        if (e.target.name === \"Message\") {\r\n            setMessage(e.target.value);\r\n        }\r\n        //check validity returns true or false\r\n        //update the isValid state\r\n        setIsValid(checkValidity(e.target.name, e.target.value, maxMinLength))\r\n    }\r\n\r\n    const handleContactMe = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isValid) {\r\n            setError('');\r\n            //send data\r\n            axios.post('api/contact-me', {name, email, message})\r\n            .then(data => {\r\n                //display the css animation\r\n                setToastClass(\"success\");\r\n                //reload window\r\n                setTimeout(()=> {\r\n                    window.location.reload()\r\n                }, 1000)\r\n            });\r\n        } else {\r\n            setError('***Some fields are missing or invalid***');\r\n        }\r\n    }\r\n\r\n    const checkValidity = (name, value, maxMinLength) => {\r\n        \r\n        let isValid = false;\r\n\r\n        const emailValid = (email) => {\r\n            const emailRegex = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\r\n            return emailRegex.test(email);\r\n        }\r\n\r\n        const classDecider = (validity) => {\r\n            if (!validity) {\r\n                let inputClass = ['form-control', 'mb-2', 'border-2', 'border-danger'];\r\n                return inputClass;\r\n            } \r\n            if (validity) {\r\n                let inputClass = ['form-control', 'mb-2'];\r\n                return inputClass;\r\n            }\r\n        }\r\n\r\n        if(name === 'Email'){\r\n            isValid = value.trim() !== '' && emailValid(value);\r\n            let newEmailClass = classDecider(isValid);\r\n            setEmailClass(newEmailClass);\r\n        }\r\n\r\n        if(name === 'Name'){\r\n            isValid = value.trim() !== '';\r\n            let newNameClass = classDecider(isValid);\r\n            setNameClass(newNameClass);\r\n        }\r\n\r\n        if(name === 'Message'){\r\n            isValid = value.trim() !== '';\r\n            let newMessageClass = classDecider(isValid);\r\n            setMessageClass(newMessageClass);\r\n        }\r\n\r\n        if (!maxMinLength) {\r\n            \r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    return (\r\n        <main className=\"container my-3 bg-light\">\r\n            <h2 className=\"text-info h3 py-3 mb-3 border-bottom\">Contact</h2>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <p>LinkedIn: <small className=\"text-muted\"><a href=\"https://www.linkedin.com/in/kelsie-langston-50433741/\">linkedin.com/in/kelsie-langston-50433741/</a></small></p>\r\n                <p>GitHub: <small className=\"text-muted\"><a href=\"https://github.com/klangs34\">github.com/klangs34</a></small></p>\r\n            </div>\r\n            <section className=\"contact_us\">\r\n                <form onSubmit={handleContactMe} className=\"text-Muted\">\r\n                <div className=\"text-center text-danger\">{error}</div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input onChange={formChangeHandler} type=\"text\" className={nameClass.join(' ')} name=\"Name\" id=\"name\" aria-describedby=\"nameHelp\"\r\n                            placeholder=\"Enter name\" required />\r\n                        <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                        <input onChange={formChangeHandler} type=\"email\" className={emailClass.join(' ')} name=\"Email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                            placeholder=\"Enter email\" required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea onChange={formChangeHandler} className={messageClass.join(' ')} name=\"Message\" id=\"message\" placeholder=\"Type Message Here\" rows=\"10\"\r\n                            cols=\"50\" required></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info mb-4\">Send <img src=\"https://img.icons8.com/android/24/000000/forward-arrow.png\" alt=\"forward arrow\" /></button>\r\n                </form>\r\n            <div className={toastClass && toastClass} id=\"toast\">\r\n               Message Sent Successfully\r\n            </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Contact"]},"metadata":{},"sourceType":"module"}